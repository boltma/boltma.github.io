[{"title":"新兴存储器件","date":"2019-12-19T11:51:34.000Z","path":"2019/12/19/新兴存储器件/","text":"本文是对Dr. Seung Kang的讲座Emerging Memories and Pathfinding for the Era of Sub-10nm System-on-Chip的总结与思考。图片是从视频截的，不是很清晰。 现有存储器件 现代内存不存在通用型内存，没有哪种器件兼具速度、容量、寿命、成本上的优势，而各个器件形成了一个层级结构，各具优劣。 在上图中，每高一个层级，每比特成本大致提高十倍。工作存储器（working memory）主要看重速度和耐久性（endurance），而装载存储器（storage memory）主要看重密度（容量）和保持能力（retention）。现在各层的主流器件是： 寄存器堆（register file） 片上缓存——SRAM 外部缓存——嵌入式DRAM 主存——DRAM 本地存储——Flash（SSD），机械硬盘 远程存储——Flash（SSD），机械硬盘，磁带…… 存储墙 在计算机体系架构中，存储墙的问题已十分严重。计算机的功耗和性能已经愈发受到存储器的限制。这其中的症结在于：片上存储器与主存之间的鸿沟，以及工作存储器与装载存储器之间甚至更大的性能鸿沟。 这些鸿沟造成了存储器的层级结构的缺位，造成了这些位置处产生了IO瓶颈。片上存储器与主存之间的性能差主要是主线上的延时，是架构的问题，而工作存储器与装载存储器之间则是器件导致的。在DRAM与SSD之间，Intel已发布过Optane（傲腾内存）来填补这个缺位，事实上这里还有很多器件可以填补，值得研究。 多核处理器 多核处理器中随核数增加需要大量的片上缓存。但是对于SRAM而言，其随制程的微缩前景堪忧。40nm制程上，一个6T-SRAM单元面积约为150F2，但到7nm制程时一个单元要占据550F2。此处F是集成电路特征尺寸，即器件的最小尺寸，通常情况下就是制程大小，例如65nm制程下，一个6T-SRAM单元若占据0.52um2，就是123F2（123=0.52*(1000/65)2）。也即，处理器的其它部分随集成电路工艺的提升而缩小时，SRAM的微缩速度慢了很多，导致在更先进的工艺节点上，SRAM显得愈发臃肿。 对于SRAM而言，更严重的问题在于其高待机功率。SRAM在现在的制程与容量下漏电严重，占据了处理器很大一部分功耗，限制了多核处理器的性能提升。 物联网与嵌入式系统 对嵌入式系统以至于可穿戴设备或其它物联网设备而言，功耗是个十分重要的因素。如果使用传统的冯诺依曼架构（现在的嵌入式设备也大多仍采用），将数据从存储器与处理器之间来回搬运极其浪费能量。另外易失存储器件浪费的功耗十分之多（DRAM、SRAM）。并且存储器一直是设备安全性的弱点，为了设备的安全性，非易失的存储器件也会是更好的选择。在这方面，PUF（physical unclonable function，物理不可克隆功能）与RNG（random number generator，随机数发生器）等器件的运用将是制造更安全的芯片的方法。其中PUF利用半导体元件自身独一无二的指纹保护芯片，任何探测或观测PUF操作的尝试都将改变底层电路特征，从而防范侵入式物理攻击。从内存本身硬件器件提升安全性会是一个有前景的方向。 &quot;The IOT is an NVM problem.&quot; Greg Yeric, ARM (2015 IEDM Plenary Talk) 新兴存储器件 上图展示了现有的主流存储器件。黄色器件（SRAM、DRAM）都是成熟的技术。而新兴存储器件全部来自非易失存储，其中相比于传统上以电荷存储数据，我们有新兴的以电阻存储数据的方式。这些以电阻存储数据的器件有：PCM（Phase-Change Memory，相变存储器）、MRAM（Magnetoresistive Random Access Memory，磁阻式随机存储器）、RRAM（Resistive Random Access Memory，阻变存储器）。而以电荷存储数据的新兴器件有：FRAM（Ferroelectric Random Access Memory，铁电存储器）。电阻存储数据由于不需要电荷的储存放电，因而功耗较低。 PCM 相变存储器（PCM，PC-RAM或PRAM）历史非常悠久，可以追溯至1966年。在下图这篇1970年的论文的标题中提到：&quot;the read-mostly memory is here&quot;，表明这种器件写入较为困难，主要用于读取。 物理上而言，相变存储器原理如下：相变材料——典型的如硫族元素构成的GeSbTe合金（GST）——有非晶态和晶态两种状态，其中非晶态阻值高，晶态阻值低。从晶态转变为非晶态，我们加热材料超过熔点，然后迅速冷却。从非晶态转变为晶态，我们加热材料超过结晶温度，但低于熔点，保持一段时间使得材料结晶，然后冷却。 这种加热冷却的方式有很多技术上的问题：加热需要单位面积上充分的电流，而在更先进的工艺节点下，由单元中的辅助器件（晶体管、二极管、三极管）提供充足的电流也更加困难。同时，如何充分利用热量？如何限制热量在自身单元而不影响近邻单元？现有的相变器件的这些可靠性问题都是值得关注的。 PCM单元由相变器件与读写装置构成。辅助读写可以使用晶体管、二极管、三极管，如上图所示。当然crossbar架构还是最重要的架构，直接将相变器件跨接在字线和位线上，该架构不需要晶体管，获得了更高的密度。crossbar架构需要选择器（selector）直接与元件耦合，选择器的设计也是很重要的工作。 对于加热相变材料，在器件上也有所进步。早期的相变材料会浪费超过90%的热量，但现在利用更窄的电极和相变材料，可以降低写入电流以及功耗，同时也能提升器件的持久性和保持能力。 现有的相变存储器弱点在于寿命和可靠性。写入次数多了后，可见阻值开始波动，影响可靠性。这是非常容易理解的——材料不能承受反复的熔化、结晶。一般PCM大约能承受106周期，而改进器件本身性质也可以达到109周期。 而对于相变存储器的保持能力，相变材料可能在非晶态下自行结晶（即使是在常温下），晶态也可能被破坏，现有技术也在对此加以改进，如下图工作能在80℃保持10年。 参见下图三星制造的相变存储器，可见达到了4.2F2的很小的面积（高密度），重结晶较慢，但150ns的写入速度仍比Flash快了许多。而英特尔的Optane则显得更为优秀：3D XPoint技术，而且已经商业化。3D XPoint使用crossbar架构，直接与选择器耦合，选择器用来防止潜通路电流的干扰（相邻单元电流的影响）。虽然性能强于Flash，但仍较DRAM有较大的差距，无论是在读写延时还是寿命上。 可以看到的是，3D XPoint技术填补了SSD与DRAM之间的鸿沟，可以作为存储层级的一个新的级别，用来解决性能的不匹配。 MRAM 磁阻式随机存储器（MRAM）原理上利用巨磁阻效应（Giant Magnetoresistance，GMR，2007年诺贝尔物理学奖），是指物质在一定磁场下电阻改变，而一定条件下，电阻率变化幅度相当大。而现在的新一代MRAM是自旋转移矩存储器（Spin-transfer-torque MRAM, STT-MRAM, ST-MRAM或STT-RAM）。这是一种性能很好的新兴存储器，有冲击DRAM之势。 MRAM的物理原理较PCM复杂许多。可参见自旋转移矩，磁隧道结的介绍。MRAM的主要原理在于：磁隧道结（Magnetic Tunnel Junction, MTJ）中两层铁磁材料之间夹一层厚度极薄的绝缘层。两层铁磁材料一个为钉扎层，磁化方向较难改变；另一层铁磁材料为自由层，矫顽力较小，在外加磁场的作用下磁化方向容易翻转。两层材料磁化方向相反时，隧穿电流较小，电阻较大；磁化方向相同时，隧穿电流较大，电阻较小。这两种状态可以用以存储数据。而对于自旋转移矩存储器而言，使用电流而不是磁场来操纵磁化方向。将正交于铁磁层的电流通过较厚的钉扎层时，可以产生自旋极化电流。当自旋极化电流进入自由层时，自旋角动量得到转移，从而改变磁化方向。相较更传统的MRAM器件，STT-MRAM的操纵是纯电的，不必操控磁场，这对于集成电路而言更为现实。 MRAM现在十分强势，它能够具有几乎可媲美DRAM甚至SRAM的速度，是非易失器件，功耗极低，持久性极长，几乎是一种通用内存。值得注意的是，它的读写电压极低，都电压只需0.1V，写电压也只需0.3-0.5V。 一个典型的MRAM架构如上，其与SRAM几乎一样，不同之处在于添加了一个预写入的参考阵列，来在读时对比实际单元的数据。MRAM的主要问题在于：其两个状态之间区别非常小，要准确读取必须有精确的外围电路，并且有良好的机制应对器件本身的噪音与变化，读操作必须鲁棒性强。写操作还需要晶体管用以控制，但是当MTJ这个阻性元件与晶体管耦合，接在晶体管的源极时，这形成了源极负反馈，会导致从源极驱动MTJ（磁化从反平行变为平行）的能力下降，也即是说，这时单元写入0、1是不对称的，也造成了一定困难。 另一方面，二端器件读写是同一通道的。如下图所示，我们要精细地控制读电压、写电压，使得它们互相不重叠，也不达到击穿电压。由于操作电压本身很低，这些窗口非常小。这里有两个概念：Read Disturbance Rate (RDR)和Write Error Rate (WER)，前者是读操作时误进行了翻转的概率，后者是写操作时没有完成写操作的概率。在器件层面上，我们有必要实现这两个值在电压的分布上的陡变（如下图所示），这样才能给读写操作留出尽可能大的窗口。还要注意写入的时间不能过长，否则还会发生经时击穿（time dependent dielectric breakdown，TDDR）。 17 MRAM器件的缩放性能很好。更先进的工艺制程下，它需要的能量也在逐步减小，所需要的电流也在减小，与SRAM相近，只需要在几ns下提供几十uA就可以实现写入。另外，MTJ线度越小，击穿电压就更高（线度越小，电流密度更小，焦耳热更小），还提高了可靠性。但是如果要实现高密度的阵列，也是很困难的一件事情。事实上MRAM与现有的工艺不足够兼容也是主要的问题。 MRAM可以承受至少1015次读写周期，寿命极长，这是其用作高速缓存的重要保障。一些MRAM的实际产品如下，实际上还没有出现大容量的产品： RRAM 阻变存储器（RRAM或ReRAM）是指除了PCM与MRAM外的阻性可以改变的二端口元件，有大量的元素组合可以实现，如下图所示，黄色元素氧化物可呈现双稳态阻值，而蓝色元素可作电极。其中RRAM大致包括： 氧化物阻变存储器（Oxide RRAM，Ox-RAM）：使用过渡金属氧化物夹在电极之间，空穴移动形成filament，展现两种阻态； 导电桥式随机存储器（Conductive Bridge RAM，CB-RAM）：使用可编程金属化单元（Programmable Metallization Cell，PMC），填充固体电解质，金属离子移动产生filament； 空位调制导电金属氧化物阻变存储器（Vacancy Modulated Conductive Oxide RRAM，VMCO RRAM），使用导电金属氧化物加上隧道壁垒夹在电极之间。 前两种器件是通过一维filament的生长改变阻态的（通过两个电极加正反电压可以生长filament或破坏之），而第三种是在界面处发生转变，是一种均匀的转变，没有filament的生长过程。实际上filament forming的原理还没有完全被理解。 对于前两种器件，如图所示，正常状态下金属氧化物绝缘，相当于电容，但在施加一个瞬时的临界电压后，局部击穿形成一个通道（filament）。此后如图，可施加正反电压破坏或重建这个通道，形成两个阻态。 对于其架构，RRAM可以与晶体管耦合，形成1T-1R的结构（面积较大），也可以使用crossbar架构。但最重要的是，它可以较为轻松地实现3D层叠，这使得其密度潜力较大。 然而，由于物理机制，可以理解的是，这种器件的变异性较大。尽管与MRAM相比，其本身的读写窗口较大，但其各种因素（如热效应，干扰等）会导致电流变化范围很广，影响了读写窗口。无论是不同单元之间的差异，或者是反复读写之后造成的元件变化，都会有极大的变异性。高能耗（高电流）读写会使得读写窗口大，而追求低能耗会使得读写窗口缩小。同时慢速写也会使得读写窗口较大，快速写时读写窗口缩小。本质上这又是一个权衡利弊之事。 其耐久性大约只有数万或数十万个读写周期（因为控制一个原子链物理上并不能坚持很久）。但对于SSD而言，这个量级的读写周期也算足够。 下述显示了数个RRAM产品，可以看到RRAM读写速度不够理想，但是其密度很具潜力，可能适合作为储存级存储器(storage-class memory，SCM)。 忆阻器 说到RRAM，必须提到忆阻器（memristor）。忆阻器是蔡少棠于上世纪70年代预言的，是根据四个电磁学基本量（电流、电压、电荷、磁链）提出的一种元件。这四种基本量的两两联系中，除了两个积分关系，其它已有三个基本元件代表了它们的联系（电阻——电压与电流，电容——电荷与电压，电感——磁链与电流），那么理应还有一个元件——忆阻器代表磁链与电荷之间的关系。 在2008年，惠普实现了忆阻器。自此，模拟域上，我们所能做到的事情更丰富了，忆阻器作为一种有模拟、运算性质的元件，使得存储器件的设计更加灵活，可以实现模拟量的存储器，以及可能的存算融合。 FRAM 铁电存储器（FRAM或FeRAM）利用铁电材料的极化存储信息，是一种颇为古老的元件。传统的铁电材料使用钙钛矿晶体，但难以实现微缩，难以进入130nm制程。这主要是因为：铁电材料作为存储器件时存储电荷，面积更小，单位面积电荷密度更大，导致计划状态不稳定。要提高密度，可以走向3维，但挑战也十分大。 但在HfO2出现后，铁电材料重新焕发出生机。尤其是铁电晶体管（Ferroelectric FET，FeFET）的进步，其既能作为晶体管开关进行控制，又能在栅极铁电材料存储信息，是一种十分有前途的器件。 总结 新兴存储器件种类繁多，各有优缺点。如今的重点不在于寻找各方面性能优秀的通用内存，而是在于如何在不同器件之间进行选择，扬长避短。 其余暂略，有时间可能补上。","tags":[]},{"title":"铁电晶体管的电荷捕捉效应","date":"2019-12-15T06:23:24.000Z","path":"2019/12/15/铁电晶体管的电荷捕捉效应/","text":"本文是IEEE Trans. Electron Devices Charge-trapping phenomena in HfO 2-based FeFET-type nonvolatile memories1一文的学习总结。这篇论文是第一篇通过具体实验分析铁电晶体管的电荷捕捉效应的论文。 电荷捕捉效应 在人们使用HfO2制作铁电晶体管的铁电介电层后，铁电晶体管就可以兼容现有工艺，获得了制程优势。相比于传统的铅基铁电材料，HfO2可以直接应用于HKMG技术（high-k metal gate technology）。铁电晶体管的半导体制造工艺已经发展了多年，例如在FinFET（Fin Field-effect transistor, 鳍式场效应晶体管）工艺下制造铁电晶体管，已经可以使铁电晶体管超过现有的浮栅晶体管的制程。 然而HfO2材料固有地具有高缺陷密度（1012-1014 cm-2），这是由于Hf的d层电子成键，而配位数很高。这些固有缺陷可以作为电子陷阱和/或空穴陷阱，会对高-k CMOS晶体管造成很大影响，例如迁移率的下降、阈值电压的不稳定性和其它可靠性问题（如温度偏移时的不稳定性和更大的漏电流）。这些陷阱主要是填隙氧原子（oxygen interstitial atoms）与氧空位（oxygen vacancy）。氧空位会在HfO2禁带宽度中造成浅（ET=0.3-1.0eV）或深（ET&gt;1.5eV）的电子陷阱。 在器件层面，这些缺陷会在较先进的制程工艺下（由于电介质更薄）造成电荷捕捉效应（charge trapping effect），捕获电子或空穴于这些缺陷中，如下图所示，其造成的铁电晶体管阈值电压的偏移恰好与铁电晶体管的极化效应造成的偏移相反。那么，在以铁电晶体管的极化状态存储信息的应用中，就会使得器件的内存窗口减小。另一方面，这种寄生的电荷捕捉效应会使得铁电晶体管的寿命降低2。 实验结论 为了具体测量电荷捕捉效应的影响，研究人员设计了实验来定量测量。为了将铁电材料的极化效应和电荷捕捉效应区分，实验的设计很有讲究。 这里使用的方法是：单脉冲ID-VG技术，使用时长几个纳秒的脉冲信号以测量瞬态响应，这种方法的具体实验步骤可参考前人的工作，电路如下图3 。 我们测量的ID-VG特性曲线应该是在脉冲信号的上升沿与下降沿上测量，而这个简单的电路可以实现这种实时测量，避免延时测量时电荷捕捉现象可能已经放电。我们利用阈值电压的偏移来定性描述电荷捕捉效应4。而本文测量结果如下，从左至右分别为掺杂了3.7mol%，4.4mol%，5.6mol%的HfO2。我们可以看到在4.4mol%下铁电晶体管表现最为良好；而5.6mol%下，阈值电压已然反偏，说明电荷捕捉效应已经超过了极化作用。因而后续实验采用4.4mol%的掺杂率。 电荷捕捉效应短时间起主导作用，但极化早于电荷捕捉 接下来文中验证了一个重要结论：电荷捕捉效应短时间起主导作用，但极化早于电荷捕捉。 我们在测量前先置负极化状态以归零。然后我们使用两个脉冲信号测量ID-VG特性。两个脉冲信号之间隔了1分钟。我们有四次测量——两次脉冲的上升沿与下降沿。第一次脉冲会将极化状态改变为正。实验中也测量了不同脉冲宽度、脉冲幅度的影响。 定性观察上图的实验结果，发现相对于上升沿1，下降沿2的阈值电压全部正偏，上升沿3的阈值电压全部反偏（正极化会导致反偏，电荷捕捉效应会导致正偏）。这证明：在所有情况下，短时间内电荷捕捉效应都是主导的（下降沿2），而经过1分钟的放电，电荷捕捉效应的影响就可以被消除，极化状态作为非易失的状态被保留。另外，脉冲时间越短，电荷捕捉效应越弱，但对于建立正极化影响不大（3的特性曲线基本重合）。 观察下图，这里分别改变脉冲幅度和脉冲宽度，测量阈值电压变化。可见下降沿2和下降沿4的状态是基本重合的，这都是电荷捕捉效应起主导作用。而下降沿3上阈值电压反偏，是极化作用。并且电荷捕捉效应随脉冲宽度呈线性增长，也随脉冲幅度增长；但极化只要脉冲充分宽就不会再随时间发生明显变化，也与脉冲幅度无关。二者均在短于1us的时间内就产生作用。 下降沿2与下降沿4基本重合还表现了一个事实：极化的建立早于电荷捕捉。在后文中，我们将论证极化的建立有助于电荷捕捉。我们知道两个脉冲初始时的极化状态是相反的（第一个脉冲开始时为负极化，第二个脉冲开始时为正极化），但它们正极化建立完毕后的电荷捕捉相同，这表明都是先建立了正极化，再由正极化辅助电荷捕捉。 电荷捕捉效应与极化效应表现出明显的相关性 观察上述实验结果，还有一个重要的现象：电荷捕捉效应与极化效应表现出明显的相关性。注意到，脉冲幅度在2V以下时，基本不会产生电荷捕捉效应，也不会产生极化。而观察脉冲幅度3V的情况，在脉冲宽度达到1us时，极化基本建立完成，而与此同时，电荷捕捉效应开始线性增长。 在能带图中我们能找到答案。通过软件仿真得到如上的能带图，其中(a)、(b)是零极化，HfO2呈顺电性，(c)是正极化，(d)是负极化，箭头表示电子、空穴隧穿的概率。可以看到，从晶体管沟道通过绝缘层的电场协助隧穿（Fowler-Nordheim tunneling）或直接隧穿（direct tunneling）是提供电子/空穴的主导来源，因为相比栅极，沟道处壁垒更窄。并且极化建立的内建电场等效于壁垒变窄，因而使得隧穿概率增加。这表明，极化的建立增加了隧穿的概率，因而铁电晶体管写入/擦除时将不可避免地产生电荷捕捉效应。 电荷捕捉效应的建立时间 定量测量电荷捕捉效应的建立时间。这次初始状态先置负极化，再置正极化以清零，再放电1分钟，然后使用单脉冲测量。由于极化建立早于电荷捕捉，故我们初始是正极化可以准确测量电荷捕捉效应的时间。结果如上图所示，阈值偏移与时间呈线性关系，拟合并求横轴截距即为临界捕获时间（critical trapping time）。可见随脉冲幅度上升，临界捕获时间减小。在擦除/写入电压达到3.5V及以上时，临界捕获时间已经低于ns量级，因而不可能做到写入/擦除时避免电荷捕捉效应。电荷捕捉效应如此快速是由于铁电层非常薄，同时建立极化所需的电场非常大（1-3MV/cm）。 电荷捕捉效应的长期表现 为了利用铁电晶体管的极化状态存储数据，必须等待电荷捕捉效应衰减。常时间的测量表明，电荷捕捉效应在秒级的时间会消减，此时极化起主导地位。 电荷捕捉效应与寿命的关系 铁电晶体管饱受诟病的就是其低寿命。但是我们调低读写周期的频率，可以得到如下图所示的结果。 以100ns的脉冲高速读写时，可以发现内存窗口衰减很快，寿命很短。但以100ms的脉冲慢速读写时，可以获得更长的寿命。 铁电晶体管的寿命主要是由界面层的退化决定的。由阳极空穴注入理论（anode hole injection theory）5，界面层的退化主要是由于热空穴从硅衬底注入栅极堆叠层造成的。而在高-k晶体管中，在负电压下强制放电会造成更大的破坏性6。这是因为栅极负电压下，热空穴会获得更高的能量，隧穿入衬底的电子能量也会更高，造成破坏。而对于器件而言，高速读写会导致每个周期内，上次写入/擦除的电荷捕捉还未放电完毕，会导致在负电压下放电，而慢速读写可使得完全放电完毕，破坏较小。 总结 本文是对电荷捕捉效应的定量分析。我们失望地发现，在更好的工艺制程下，电荷捕捉效应愈发明显，而我们的读写操作不能避开电荷捕捉效应，而且铁电晶体管的寿命也受之限制。 有一个新的思路在于：利用电荷捕捉效应进行存储。我们可以发现，电荷捕捉效应相同地造成阈值电压的偏移（只不过相反），因而我们可以用相似的手段存储数据。这种存储方式不是非易失的，更像是动态内存，仅能维持ms-s量级，需要不断刷新。将铁电晶体管的两种存储方式进行联合，使用其各自的优缺点作联合的存储方案是新的思路。 但这篇论文指出了这种思路的主要问题： 电荷捕捉效应与极化的建立密切相关，在不建立极化时，电荷捕捉效应很弱。 利用电荷捕捉效应存储数据可能并不能提升寿命。根据本文，寿命缩短主要是在负电压下强制放电造成的。如何能避免出现这种情况提升寿命？如果这种存储方法不能提升寿命，甚至要结合极化使用时，这种联合存储是没有优势的。 对这两个问题需要思考新的解决方案。 参考文献 Yurchuk, Ekaterina, et al. &quot;Charge-trapping phenomena in HfO 2-based FeFET-type nonvolatile memories.&quot; IEEE Transactions on Electron Devices 63.9 (2016): 3501-3507.↩ Yurchuk, Ekaterina, et al. &quot;Origin of the endurance degradation in the novel HfO 2-based 1T ferroelectric non-volatile memories.&quot; 2014 IEEE International Reliability Physics Symposium. IEEE, 2014.↩ Leroux, C., et al. &quot;Characterization and modeling of hysteresis phenomena in high K dielectrics.&quot; IEDM Technical Digest. IEEE International Electron Devices Meeting, 2004.. IEEE, 2004.↩ Heh, Dawei, et al. &quot;Extraction of the threshold-voltage shift by the single-pulse technique.&quot; IEEE electron device letters 28.8 (2007): 734-736.↩ Alam, Muhammad A., Jeff Bude, and Andrea Ghetti. &quot;Field acceleration for oxide breakdown-can an accurate anode hole injection model resolve the E vs. 1/E controversy?.&quot; 2000 IEEE International Reliability Physics Symposium Proceedings. 38th Annual (Cat. No. 00CH37059). IEEE, 2000.↩ Kerber, Andreas, and Eduard Cartier. &quot;A fast four-point sense methodology for extraction of circuit-relevant degradation parameters.&quot; IEEE Electron Device Letters 31.9 (2010): 912-914.↩","tags":[]},{"title":"铁电TCAM与少样本学习","date":"2019-12-09T14:30:36.000Z","path":"2019/12/09/铁电TCAM与少样本学习/","text":"本文是Nature Electronics上倪凯Ferroelectric ternary content-addressable memory for one-shot learning1一文的学习总结与分析，同时也补充了一些技术最近的动向与分析。 作为一篇Nature子刊的文章，这篇工作有两大非常重要的主要工作：阐述了将TCAM应用于少样本学习的方法，以及提出一种每单元两个铁电晶体管的TCAM结构。这篇文章除提出了可行性外，也留下了很多可以后续跟进的未解决的细节，非常值得深入学习。 可以参见Nature Electronics上的一篇评论2简要了解这项工作。 关键技术 TCAM 三态内容寻址存储器（TCAM, ternary content-addressable memory）是由CAM发展而来的一种存储器。它是一种很有前景的新型存储器，对于CAM，它除了有传统内存的功能（向指定地址写入数据，或从指定地址读出数据）外，还支持一种特殊的功能：输入待查数据，返回该数据被存储的地址。 这种功能非常强大，因为传统上要从内存中查找一项数据，不但需要一个好的查找算法，而且还会浪费大量时间将数据从内存搬运至CPU。而如果我们在电路层面支持在内存中查找数据，直接返回地址给CPU将非常有利。CAM与TCAM的区别在于：CAM只支持精确匹配，而TCAM则在比较数据时支持第三态（don't care），即对每一个比特，有0（mismatch）、1（match）和x（don't care）三态，因而支持模糊匹配。 FeFET 铁电晶体管（FeFET，ferroelectric field-effect transistor），重要的新型存储器件，不必多做介绍。基本原理在于：在传统MOSFET栅极的电容中加入一层铁电材料（如HfO2），使得可以通过铁电材料的正负极化存储数据。正极化时，晶体管阈值电压较低；负极化时，晶体管阈值电压较高。铁电晶体管的优点在于： - 非易失存储； - 无直流写功耗； - 兼容现有的先进工艺； - 可利用电流电压特性曲线中滞回特性的负电容效应进一步进行低功耗电路设计； - 兼具非易失存储与晶体管的控制特性，电路设计灵活。 铁电晶体管的主要缺点是寿命较短，现有的HfO2铁电晶体管寿命约为105周期3，这主要是受铁电绝缘层的电荷捕捉效应（charge trapping effect）限制4。 铁电晶体管的最近动向包括： 通过抑制电荷捕捉效应提高寿命5，在参考文献的工作中可以达到1012周期； 利用电荷捕捉效应存储数据，实现铁电晶体管的另一种存储。这种存储是易失的，但寿命较长，相当于一种动态内存。可以利用两种存储的联合进行一些应用优化； 多层不同铁电材料的堆叠，每层存储一个比特，材料与厚度不同，通过设置参数以实现较好的多层单元（MLC，multi-layer cell）存储； 铁电二极管（Fe Diode）的应用。 LSH 局部敏感哈希（LSH，locality-sensitive hashing），是这篇工作中将神经网络与TCAM结合的关键技术。与传统哈希不同，局部敏感哈希希望数据相似时，哈希值相似；数据相距较远时，哈希值也相距较远。 主要工作 记忆增强神经网络 使用记忆增强神经网络（MANN，memory augmented neural networks）进行元学习（meta-learning）并不是什么新鲜的事。以分类问题为例，少样本的学习一直是很困难的问题。使用MANN我们可以不必在遇到新数据时重新训练学习参数，而是只需回写一个键值6。对于MANN的具体理论我们不做分析，这里我们更关注如何利用TCAM提升它的效率。我们所针对的是MANN中的这样一个过程：将存储的参数从存储单元（内存或显存）搬运到计算单元（CPU或GPU），逐条比对距离后，找到最接近的类别。这个操作极其耗时，但利用TCAM我们可以大幅减低这个耗时，距离的比对将在存储单元中直接完成，并由存储单元返回类别。 上图显示了在TCAM上进行MANN操作的具体方式。以N-Way K-Shot分类问题（N个类别，每个类别K个样本，K很小）为例，我们从训练集中提取特征，然后存在内存中。对于查询请求，我们也提取其特征，与存储的特征比较余弦距离，然后得出分类，并将其特征以一定方式写回内存。这里具体的特征提取、写回内存的特征均不是我们关心的。传统方式下，如果我们有M个数据项要比对，每个是D维的，那么需要进行MD次乘法和M(D-1)次加法。 使用TCAM进行特征的比较时，我们最主要的问题在于，TCAM仅能进行二进制编码的匹配，而特征提取实际上是应该进行余弦距离比较的。为此，我们将特征提取的最后一层网络（通常应是softmax层）替换为LSH层，从而我们能转换为一个二值签名，只需比较汉明距离即可。在测评中可以看到，只要LSH算法较好时，网络的准确度不会下降太多。LSH层数是一个超参数，可以进行调参使得准确率不随之提高。 另外LSH可以使用精确的，从而TCAM作为CAM使用；LSH也可以是模糊的（ternary LSH），从而利用TCAM的第三态特性。 使用TCAM，效率是很高的，也节省了很多功耗。这一点毋庸置疑，具体分析可以详见文献。而且准确率的下降在可接受范围内。文献中指出，在Omniglot数据集上，一次搜索能量降低到1/60，延时降低到1/2700。 2FeFET/Cell TCAM 这个TCAM单元结构如图。两个FeFET分别存储互补的数据，即存储逻辑1时，左管负极化（高阈值电压），右管正极化（低阈值电压）； 存储逻辑0时，左管正极化，右管负极化。查找时，先给ML（match line）预充电到高电平，放开，然后通过SL（search line）给两个铁电管栅极施加互补的电压：查找逻辑1，左管高电平，右管低电平；查找逻辑0，左管低电平，右管高电平。如果失配，则正极化的铁电管SL上是高电平，则打开，ML接地将ML电放去。如果匹配，则正极化铁电管SL是低电平，截止，负极化铁电管也截止，那么ML维持高电平。对于x状态（don't care）有两种方式实现：可通过使两个铁电管均负极化存储x；或查找时两根SL均通低电平，两种方式下ML均维持高电平。 具体对一个阵列而言，判定匹配程度是通过ML放电速度判断的。这个放电过程是简单的寄生电容一阶放电过程，符合指数衰减1-exp(-t/τ)，其中τ与失配单元数量成正比，如下图所示（这也很容易理解）。图示为6个TCAM单元的情形，实际上补充材料显示了更多数量并联的可能性（可以继续设计外围电路，这并非重点）。我们需要注意的是：我们并不需要区分具体有多少个单元失配，我们可能只需了解哪些行是最匹配的。因而放电速度最快的几行可以直接忽略，可以等待一定时间再查看电平（这个时间损耗很小）。 与传统的其它TCAM结构比较，这个结构具有相当多的优势。与CMOS实现的TCAM相比，CMOS需要16个晶体管，非常浪费空间，而且不具有非易失特性。与阻变器件实现的TCAM相比，铁电晶体管不必有直流电流流经阻性器件，大大节约功耗，同时阻变器件要在集成电路的后道工序（BEOL，Back end of line）加工，使得寄生效应明显，更加剧了漏电，并且阻变器件的高阻和低阻之比较小，从而可探测范围较小 ，需要更精细的外围放大感测电路。下表显示了现有的TCAM单元的实现方式的比较。 后续跟进 我认为值得跟进的点有以下内容： TCAM外围感知电路的设计 电路层更大规模TCAM阵列的可行性（注意写干扰问题） 其它AI应用上的使用前景（本文只是demo） 参考文献中值得注意的TCAM相关，后续需要阅读的有： Karam, Robert, et al. &quot;Emerging trends in design and applications of memory-based computing and content-addressable memories.&quot; Proceedings of the IEEE 103.8 (2015): 1311-1330.、 Laguna, Ann Franchesca, Michael Niemier, and X. Sharon Hu. &quot;Design of hardware-friendly memory enhanced neural networks.&quot; 2019 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE). IEEE, 2019. Ni, Kai, et al. &quot;Write disturb in ferroelectric FETs and its implication for 1T-FeFET and memory arrays.&quot; IEEE Electron Device Letters 39.11 (2018): 1656-1659. 总而言之，这篇文章信息量实在太大，值得日后再次仔细阅读。 参考文献 Ni, Kai, et al. &quot;Ferroelectric ternary content-addressable memory for one-shot learning.&quot; Nature Electronics 2.11 (2019): 521-529.↩ Huang, Peng, Runze Han, and Jinfeng Kang. &quot;AI learns how to learn with TCAMs.&quot; Nature Electronics 2.11 (2019): 493-494.↩ Müller, J., et al. &quot;Ferroelectricity in HfO 2 enables nonvolatile data storage in 28 nm HKMG.&quot; 2012 Symposium on VLSI Technology (VLSIT). IEEE, 2012.↩ Yurchuk, Ekaterina, et al. &quot;Charge-trapping phenomena in HfO 2-based FeFET-type nonvolatile memories.&quot; IEEE Transactions on Electron Devices 63.9 (2016): 3501-3507.↩ Ni, Kai, et al. &quot;Critical role of interlayer in Hf 0.5 Zr 0.5 O 2 ferroelectric FET nonvolatile memory performance.&quot; IEEE Transactions on Electron Devices 65.6 (2018): 2461-2469.↩ Santoro, Adam, et al. &quot;Meta-learning with memory-augmented neural networks.&quot; International conference on machine learning. 2016.↩","tags":[]},{"title":"RC-NVM技术详解（下）","date":"2019-12-04T13:49:36.000Z","path":"2019/12/04/RC-NVM技术详解（下）/","text":"本文是HPCA 2018 RC-NVM: Enabling symmetric row and column memory accesses for in-memory databases1一文的学习总结与分析。这一部分将主要总结RC-NVM的总体架构设计。 值得注意的是，此架构设计的思路中，并不特定针对RC-NVM的电路设计，因而总体而言适用于不同的对称式存储器。 RC-NVM架构设计 内存架构的设计主要涉及：整体架构、寻址、缓存架构以及应用层的数据布局。 整体架构 类似于传统DRAM或RRAM内存，RC-NVM整体架构也有channel，DIMM，rank，chip，bank……的层次，关于内存的结构，可参见《内存条物理结构分析》一文的介绍。 上图为RC-NVM整体架构的一个例子。此图中有一个DIMM，该DIMM中有两个rank，每个rank有八个chip，每个chip由上一篇总结中电路结构所示的bank（含多个RC-NVM子阵列）组成，八个chip合在一起形成64位的存储器总线。按行或按列的读取粒度（granularity）均为8字节。可以在每个rank添加一个chip用以安排纠错码，例如带附加奇偶校验码的汉明码（SECDED），则存储器总线为72位，和传统的DRAM一样。 寻址 寻址要完成三个目标： 两种读取方式的专用地址模式 显式控制物理内存上的数据布局 扩展指令集 双寻址模式 如图所示，(a)中是传统32位主存的地址格式，也即RC-NVM按行读取的地址，其与(b)中按列读取的地址在于：颠倒了行位和列位。传统地址格式被完全对称地移植到按列读取的方式上，简化了很多接口、控制器的设计，并且两种读取模式地址间的转换是很容易的。对于按行读取，内存地址增加是增加列位；对于按列读取，内存地址增加是增加行位。 显式数据布局控制 主流操作系统都有内存页的管理机制，现代处理器也支持这些机制。以huge-page（大内存页）技术为例，大内存页可以设为例如1GB，我们让大内存页中虚拟内存地址的低30位与对应物理内存地址低30位完全相同，那么当这低30位包含了行位和列位时（如上一节所示，这是可以做到的），那么分配内存空间时，IMDB（内存数据库）就可以显式地控制数据在物理内存上的布局。实际内存的子阵列（subarray）通常容量小于1GB，因而这样的策略是可以满足我们要求的。这里是以32位内存为例，64位内存是类似的。 我们为什么需要讨论数据布局的显式控制？事实上这是内存与操作系统接口部分的重要一环。实际的应用中，我们并不满足于直接操纵指针（虚拟地址）。在后面讨论具体应用的数据布局中，我们将看到，为了发挥对称式存储的优势，我们需要拥有显式控制数据布局的能力。我们在这里关心的是什么？是我们需要在操作系统调度、调配物理内存地址的时候，我们能够在应用层面，控制数据在物理内存上的布局。这个解决方式看似简单：直接将物理内存地址与虚拟内存地址直接对应，但需要知道这个对应不是毫无意义的；相反，失去了这个对应的限制，操作系统将直接全盘接管物理内存的调度分配，而我们将在应用层失去调整物理内存分配的可能。我们将在后面看到，像一维内存一样直接将数据按序存储将不是最优的布局方式，对称式存储器是真正二维的，因而针对不同应用进行显式的内存布局是必要的，将布局的能力交给应用处理显然是最合适的——我们不再简单地只在应用层分配内存，把具体数据布局交给操作系统（传统上数据也只需要顺序排列，不必考虑布局），而真正地接管了数据布局。 实际情况下，RC-NVM设备接入后，设备信息被传给BIOS，IMDB可以从操作系统处获得这些信息并且进行数据布局。 指令集扩展 这一部分较为简单，我们要增加cload和cstore指令，以利用我们按列读写的新特性。指令可形如： 12cload reg, addrcstore reg, addr 其中reg为目标寄存器，addr为内存地址。指令的实际操作可以通过在行读和行写指令中加入一位信号，标识读写操作是按列的。这在DDR接口中是可以实现的，例如DDR4有两个预留的地址引脚，可以利用其中一个发送此信号。原先指令集中行读、行写仍分别为load和store，其它指令不需调整。 缓存架构 缓存架构主要也有三方面需要调整： 双寻址下的缓存存储方式 单核处理器的缓存同义 多核处理器的缓存同义与缓存一致性 双寻址下的缓存存储 RC-NVM在两个不同方向上，地址格式都与传统内存相同，因而缓存寻址也可以直接使用传统的方式，解码电路也不必更改。为了区分两个不同方向的地址，缓存中需要增加一个方向位（orientation bit），按行读取的数据方向位置0，按列读取的数据方向位置1。 上图给出一个缓存的例子，第437行，182列的数据按先前的地址格式，按行读取为0x0036a5b0，按列读取为0x0016cda8，此处行位与列位均占10位，其余位为0。 这个例子中缓存大小64KB，块大小为64字节，4路相联，具体不再赘述，和传统缓存一致。每次按行读取某8字节数据时，将此子阵列中整行其它56字节一起读入缓存，同时置该缓存项的方向位为0；按列读取类似。 单核处理器的缓存同义问题 缓存同义（cache synonym）问题是指：按行读入缓存的数据与按列读入缓存的数据，交叉处的数据被存放在了两个缓存块中，而需要保持二者的同步。 在RC-DRAM的工作2中，提出了WURF 缓存一致性协议，以取代传统的MESI协议。RC-NVM的工作中提出了另一种方式：在缓存块中，给每个8字节（读取粒度）增加一位标识位，用以表示是否是交叉格，称为交叉位（crossing bit）。对每个64字节的缓存块，需要额外8位交叉位。在上图中有显示，对于缓存中读取的一行，其每8字节对应的交叉位指代缓存中是否有对应列存储其中。 总体而言，解决缓存同义，是要使得交叉处的数据同步更新。具体地，需要进行以下额外操作以保持同步： 当一个缓存块被载入缓存中，缓存控制器检查所有可能与此块交叉的行或列，并置交叉位，如果有交叉，那么交叉处的数据应由对应的缓存中复制而来（以保持同步）。例如上图，读取图示行时，检查所有8列，发现4列在缓存中，因而有四位交叉位置1。 当一个缓存块被从缓存中驱逐时，其交叉的行或列对应交叉位置0。 当一个缓存块在写操作中被更新，而更新位置对应的交叉位为1，对应的另一个缓存块同时更新数据。 多核处理器的缓存同义问题与缓存一致性问题 缓存一致性（cache coherence）问题是指：多核处理器各个私有缓存中存储同一份内存数据时，需要保持同步。 多核处理器中，既有缓存同义问题，又有缓存一致性问题。我们遵循以下原则：先处理缓存同义问题，再使用缓存一致性协议。 传统的缓存一致性协议主要分为监听式与目录式，此处不介绍细节。监听式主要通过监听其它处理器的缓存读写来调整自身的状态；目录式有一个主处理器以协调其它处理器的缓存，主处理器持有一个目录记录其它处理器的缓存信息。两种方式各有优劣，此处不做比较。对于RC-NVM，采用何种一致性协议是不重要的。 处理缓存同义问题的方式在上一节中已经叙述，对于多核是一样的。此处交叉位的值是否应该被视作缓存的一部分而应用缓存一致性协议呢？稍加思考可以知道：目录式的一致性协议需要将交叉位存于目录中，而监听式的协议需要将交叉位看为缓存块的一部分在各个核中同步更新。 处理完缓存同义问题后，我们再使用缓存一致性协议（例如MESI协议等），以保证各个核的缓存同步。注意到使用缓存一致性协议并不会引入新的缓存同义问题，因为缓存一致性问题仅涉及缓存块（某特定方向）的数据的同步，另一个方向应该已在先前的缓存同义中保证了交叉点的一致。另外，现有的缓存一致性协议不必修改。 另外，单核和多核情况下，从缓存读的操作均没有额外开销；写回额外开销不大；数据替换（更新）操作开销较大，但这本来开销就较大，故可以接受。（此部分开销的分析存疑，这里缓存读写的主要开销究竟是哪一项？） 具体应用 这是一个IMDB应用例，在这个应用中，如上所示，有16个数据项，每项4个字段，每个字段8字节，右侧的内存子阵列共含512字节，以如上布局存储16项数据。我们以以下几个应用为例说明RC-NVM的优势： 1234561 for (int i &#x3D; 1; i &lt;&#x3D; 16; i++) &#123;2 if (table-&gt;tuple[i].f3 &lt; 1234)3 Print f1, f2, f3, f4 of tuple[i];4 &#125;SELECT * FROM table WHERE f3 &lt; ‘1234’ 这是一个OLTP应用，选取所有f3字段小于'1234'的数据项，传统上按行依次读取比较，在RC-NVM上也是按行读取，每次读取，行缓冲区中可存两项数据。 1234567891011121314151617181 int sum &#x3D; 0;2 uint32_t col_addr_1, col_addr_2;3 col_addr_1 &#x3D; Row2ColAddr(&amp;(table-&gt;tuple[0].f4));4 col_addr_2 &#x3D; Row2ColAddr(&amp;(table-&gt;tuple[1].f4));5 for (int i &#x3D; 1; i &lt;&#x3D; 8; i++) &#123;6 uint64_t f4_1 &#x3D; column_load(col_addr_1);7 if (f4_1 &lt; 4321)8 sum +&#x3D; f4_1;9 col_addr_1 +&#x3D; 8;10 &#125;11 for (int i &#x3D; 1; i &lt;&#x3D; 8; i++) &#123;12 uint64_t f4_2 &#x3D; column_load(col_addr_2);13 if (f4_2 &lt; 4321)14 sum +&#x3D; f4_2;15 col_addr_2 +&#x3D; 8;16 &#125;SELECT SUM(f4) FROM table WHERE f4 &lt; ‘4321’ 这是一个OLAP应用，计算全体小于'4321'的f4字段之和。传统上需要读取每一项数据，取出f4，进行比较，然后求和。但是在上面这段代码中，我们可以直接按列读取两列，大幅减小内存读取的次数。 上图中应用是行列混合的。问题与上述OLTP应用类似，但我们也可以利用列读的方式提升效率。这个应用中内存总线上传递的数据均是有用的数据，增加了内存带宽的利用率。 数据布局 我们先前提到，我们有必要在应用层对物理内存上的数据分布进行显式的操控，这里具体来讨论。 数据库通常较大，要存放于内存中，必须进行切割，然后将切割后的块按一定方式放于存储阵列中。切割数据库的技术有很多，例如HDF53，这里不做介绍。这里我们定义，一个块（chunk）是RC-NVM中放置数据的一个矩形单元，可以存于RC-NVM的一个子阵列中。换句话说，当一个表大于RC-NVM的子阵列的大小（此文例子是8MB），或者当一行数据的长度大于子阵列的行长（此文例子是8KB）时，就会被切割。第二种情况甚少在实际情况中出现。 进行切割后，有两个问题需要考虑：块内数据布局与块间数据布局。 块内数据布局 传统上，内存虽然是二维阵列，却实际上是一维的。数据在内存中以左图的方式布局。而对于RC-NVM，有两种布局方式：行向布局与列向布局。 左图行向布局是传统布局方式，各数据项的行内存地址连续排列，与传统IMDB以及内存分配完全兼容，适合按行的读取方式。但是这种布局方式按列读取效率不高。事实上，虽然我们的存储器支持按列读取，但这样的布局下，按列读得的数据不是按顺序排列的（T1之后是T5）。 右图列向布局则更适合列向读取，各项数据按列依次排布于内存中。也即，每一项数据本身虽然是横向放置的，但各项数据却是按列排列的。此时，获取各项数据的同一个字段效率大幅度提升，可以直接应用按列读取的方式。 事实上，OLXP应用应该采用右图的列向布局。因为实际情况中，每项数据长度会远小于RC-NVM的行长，因而每行实际上有较多数据，按列读取数据效率较低，并且，实际情况中连续扫描各项完整数据的需求并不大。 块间数据布局 块间数据布局是个有意思的问题。由于对每个子阵列而言，行列完全对称，因此数据可以旋转后填入子阵列。我们的目标是：使得填入了至少一块数据的子阵列（也即使用的子阵列）数目尽可能少。实际上这是一个经典的问题：可旋转的二维在线装箱问题（two-dimensional online bin packing with rotation）我们可以利用很多已有的工作，例如Fujita的算法4来求解这个问题。 这个问题纯粹是软件级别的，在应用层由数据库内存分配来实现，与硬件无关。 组缓存优化 当数据需要以特定顺序获取时，行向读取效率会降低。先前介绍的都是字段定长（8字节）的情形，但实际情况中字段未必定长，而且也可能超过按列读取的宽度（8字节），这将降低效率。因而我们要在此研究宽字段读取（wide field access）问题。 如图所示，数据中含有Email字段，但其跨了RC-NVM的两列，不可分割。简单回顾一下架构：我们有一个覆盖全列的列缓冲区，但缓存块通常并没有那么大（例如只有64字节，即能存储该列中8行的数据），务必需要注意缓存与内存是分离的，它们在两个不同设备中，不能认为它们自然匹配。 简单地以右侧方式读取（也即两次按列读取）将会使得实际上不可分割的Email字段被分离了。数据以图示的顺序被读取，内存上进行了两次按列读取，但数据被读入的顺序并不正确，当T1至T8的Email被读入时，它们事实上仅获得了一半的数据，对于应用而言，这样的数据是无用的（我们并不能假定这些读过的数据被存下而被后续拼接了，缓存可能会直接将之前的数据丢弃）。列向的读写能够高效遍历整个字段仅当读取顺序不做要求。 正确的方式是以左侧方式读取，但是这需要做四次按列读取，列缓冲区被替换了三次，造成了极大的浪费，列缓冲区被重复地替换了。要正确获得T1的完整Email字段，我们理应在获得前8字节后，立刻获取后8字节。 读取多个字段的情形也是类似的。实际上，操作本身对于数据的获取顺序是有要求的。同一项数据的f3、f6、f10字段应该被一起取出。这种Z型的读取极大降低了按列读取的效率。另一方面，我们更不应该在这种情况下转投按行读取。 这也是一种缓存颠簸（cache thrashing）。其实这个问题很容易解决，按照两图中右侧的读法，数据本身都已经被取出了，唯一的问题就在于缓存可能驱逐上一次刚读进来的问题。我们采取一种熟知的技术：缓存固定（cache-pinning）5，具体如下所示：我们按照上述右侧的按列取法，先将T1-T8中所有的前半部分读入缓存，并且固定在缓存中，然后依次如图取完四组数据，数据库从缓存中取走数据，缓存解除对数据的固定，这就是组缓存（group caching）。这个操作是纯粹软件层面的，可以由IMDB发出一条组缓存的指令来完成。 利用组缓存技术，我们在读取一块矩形区域数据时，IMDB本身可以做优化，选择按行或按列读取。组缓存的大小对效率的影响在于：组缓存大时，会使得其它数据更有可能缓存不命中，而组缓存大小也不能超过缓存本身容量；组缓存小时则不一定能够起到效果。 评测 此部分略去。如果未来有时间可能考虑补上这项内容。 仿真配置与测评的代码如上。 结果如下： 相关工作 具体文献详见原文，此处仅作总结。 内存数据库优化 内存相关的处理器流水线停顿分析 数据布局优化 软件层面的OLXP，如行列混合存储 高性能内存架构 DRAM相关的高性能内存架构也可以移植于RC-NVM上，与此文所述架构结合。 Redundant Memory Mapping SALP DRAM与对称式存储的混合架构 Intel Optane 总结 这是一套完整的从电路到应用层的对称式存储架构设计，在各个层次都有值得学习的地方。总体而言，这样的架构设计充分利用了现有技术，例如与RC-DRAM相比，此架构没有设计新的缓存一致性协议，而是利用了已有的协议。 并且，架构设计中充分的分层是值得学习的。在分层中值得注意的是，一定不能将各个层次混淆，例如：组缓存策略中，缓存的设计与内存本身读写一定要充分区分，不能认为支持了行与列的内存读写，相应的缓存就必然能够按列拼接数据；数据布局的设计也是类似的。一定要注意，在底层出现了新的设计后，向上的每一层接口都要相应地发生改变，但并不用关心下层的具体细节。 不能仅满足于电路设计，一个支持对称式访问的存储器并不必然地能够提升应用的性能。本文给出一个好的例子，设计了一个完整的系统，此后的工作应该考虑参考之进行完整的系统设计方才是有意义的。 总体而言，本文架构设计的思想均是最自然的思想，未必是最好的办法，但大大简化了设计的难度，具体应用上，我认为还有一定的改进空间。在系统设计上，最重要的就是抓大放小，掌握各项内容开销大小的主次才能设计好的系统。 参考文献 Wang, Peng, et al. &quot;RC-NVM: Enabling symmetric row and column memory accesses for in-memory databases.&quot; 2018 IEEE International Symposium on High Performance Computer Architecture (HPCA). IEEE, 2018.↩ Chen, Yen-Hao, and Yi-Yu Liu. &quot;Dual-addressing memory architecture for two-dimensional memory access patterns.&quot; Proceedings of the Conference on Design, Automation and Test in Europe. EDA Consortium, 2013.↩ Folk, Mike, et al. &quot;An overview of the HDF5 technology suite and its applications.&quot; Proceedings of the EDBT/ICDT 2011 Workshop on Array Databases. ACM, 2011.↩ Fujita, Satoshi, and Takeshi Hada. &quot;Two-dimensional on-line bin packing problem with rotatable items.&quot; Theoretical Computer Science 289.2 (2002): 939-952.↩ Zyulkyarov, Ferad, et al. &quot;Method for pinning data in large cache in multi-level memory system.&quot; U.S. Patent No. 9,645,942. 9 May 2017.↩","tags":[]},{"title":"RC-NVM技术详解（上）","date":"2019-12-03T11:18:31.000Z","path":"2019/12/03/RC-NVM技术详解（上）/","text":"RC-NVM是指Row-Column Non-Volatile Memory，是一种新型的对称式非易失存储器架构。本文是HPCA 2018 RC-NVM: Enabling symmetric row and column memory accesses for in-memory databases1一文的学习总结与分析。 背景介绍 对于关系数据库应用，传统硬盘存储只将小部分数据缓存于内存中，具有高I/O延时，而随着DRAM价格降低、容量提升，IMDB（in-memory database，内存数据库）成为可能。 关系数据库以二维表格存储数据。数据库应用的工作量主要分为两种：OLTP（on-line transactional processing，联机事务处理）与OLAP（on-line analytical processing，联机分析处理）。其中OLTP主要是对数行的读写过程，并且对延时性能要求较高，主要见于交易处理系统。OLAP主要是大量连续跨行、涉及数列的数据处理，例如求列上数据之和，主要见于数据仓库。 同时使用这两种处理方式时，内存中就需要同时常驻存储至少两份数据拷贝，同时二者之间的数据同步也导致分析数据与实时数据之间转换的低响应。OLXP技术混合二者，将数据存于同一个数据库中，但这一技术也使得内存读写的效率降低。这其中的主要原因在于：OLTP主要涉及按行读写数据，而OLAP主要涉及按列读写数据。传统内存只有一个维度，提供从零开始的内存地址，只能以一个方向读写数据，并且传统上数据也按行存于内存中，对于OLTP方式更为友好。此时OLAP访问就会出现跨行的访问（strided memory access），这样的访问使得DRAM的行缓冲区与缓存利用率极低。如果对OLAP进行优化，数据按列存储，OLTP就会出现同样的问题。 上图为按行存储的数据库的具体形式，其中上半部分展现了一种OLTP操作，下半部分展现了一种OLAP操作，注意到OLAP操作中缓存的利用率较低。 要解决这一问题，同时支持按行读取与按列读取的内存架构是必要的。现有的技术主要有：GS-DRAM、transposable SRAM、RC-DRAM。 GS-DRAM Gather-Scatter DRAM2是一种十分有趣的内存架构，以后有机会可以再单独写一篇文章介绍。 参考资料可参见https://users.ece.cmu.edu/~omutlu/pub/GSDRAM-gather-scatter-dram_vivek-micro15-talk.pptx 这是在对传统DRAM做极少的改动下，将所读的行中可能需要的列（字段）中数据放于缓存中： 如上所示，缓存中存储的并非是按行读取的数据，而是跨行的字段，这样的架构可以做到行、列都具有较高的效率。具体而言，通过以下两个技术，可以使得每行的数据中对应的同一列（字段）地址错开，这样可以存于缓存中的不同位置，并可以反向推断内存地址（缓存中地址大致等同于内存地址的最末若干位，这种描述不精确，但足以描述这种方法的思想）。 Column-ID-based data shuffling (shuffle data of each cache line differently) Pattern ID – In-DRAM address translation (locally compute the column address at each chip) 然而这个技术有一些明显缺陷： 只能利用已经存储于行缓冲区中的数据放入缓存 不够灵活，只适用于特定形式，例如跨2的幂的读取 当行的大小增大时，效率减低，因为能同时利用的行数减少 数据库有多个表时，由于模式增多，复杂度提高 RC-DRAM RC-DRAM也称为双向可寻址DRAM。这也是一个很重要的内存架构，先前也学习了这个架构，以后如果有时间也需要总结。 RC-DRAM3是针对现有的DRAM单元进行的直接改进，每个单元含二晶体管、一电容，是完全对称的结构，在阵列级别上能够同时支持按行、按列的读取（并且完全对称）。 这使得按列的读取与按行的读取完全对称，解决了上述的问题。 这种方式需要解决的问题在于，缓存一致性协议需要修正，主要因为此处有两个方向的缓存，保持其同步需要额外的协议。 这种技术的主要问题在于：其各个单元面积的开销过大，甚至超过了直接复制两遍数据（一遍以行、一遍以列）方式的开销（面积开销超过两倍，同等面积容量不足一半）。 Crossbar架构 基于Crossbar架构的非易失存储是一种主流技术，并且十分适于对称式存储器设计。 图示为一8*32RRAM构成的Crossbar阵列。RRAM也可以用其它有非易失特性的器件（如PCM）替代。其中每个RRAM单元跨接在字线与位线的交点上，通过行线和列线上施加不同电平可以按行或按列进行读写，具体读写方式不在此赘述。 Crossbar架构的优势在于，每个非易失存储单元本身即完全对称，在架构中按行与按列的读写完全对称。与RC-DRAM相比，其不需要额外的晶体管用于行列读写的控制，因而它的额外面积开销显著更小。 RC-NVM就是采用Crossbar架构进行的设计。 RC-NVM电路设计 上图为RC-NVM的具体logic bank设计。除去基本的Crossbar阵列外，有一些外围电路。 字线与位线均连接到专用的解码器（decoder），感测放大器（sense amplifier, SA），写驱动器（write driver, WD）之上。这些连接均用多路复用器（multiplexer, MUX）控制，控制信号由内存控制器发出。除去已有的行缓冲区外，还要增加一个列缓冲区。 bank中划分为子阵列（subarray），这是用以按行、按列对称读写的基本读写单元。以行读为例，给定一个访问地址，全局的行解码器作部分解码，激活一个全局字线（global word line, GWL）和一个全局块线（global block line, GBL），然后局部行解码器最终发出一个one-hot信号（一位有效编码，指仅一位为1，其余位均0），激活一个局部字线（local word line, LWL），此后列解码器激活局部位线（local bit line, LBL），最终读出所要读的单元内的数据。随后感测放大器通过数据线（data line, DL）将数据送到行缓冲区。 这是一个经典的层级结构，能在规模增大时有效缓解延时和功耗。 这里会产生一个冲突：当同一个bank中的行与列缓冲区都存有数据中，该行与列交点处的数据被同时存于两个缓冲区中。这产生了经典的一致性问题，当一个缓冲区中该数据修改时，无法保证另一个缓冲区中同一数据被同步修改。这里，增加一个限制：行缓冲区与列缓冲区不能同时使用。当行或列缓冲区要使用时，我们关闭另一个正在使用的缓冲区，将数据写回。这避免了数据的一致性问题，代价是下一次被关闭的这一方向下一次读写时需要再从内存进行读写。然而实验结果表明，这样的代价影响不大。 此两图显示了该电路设计的面积与延时特性。 上图是面积特性，横轴表示字线与位线的数目（方阵），纵轴为RC-DRAM与RC-NVM相比传统DRAM或NVM的面积多余开销，这里DRAM与RRAM被设定在同一工艺节点上，容量为4GB，具体评测方法参见文献。可见的是，RC-DRAM具有极大的额外开销（大于两倍），且在电路规模增大时，额外开销更大；但RC-NVM额外开销较小，主要来源于外围电路，因而随着规模扩大，额外开销的的比例在缩小。当字线与位线数为512时，额外面积开销小于20%。 下图为延时特性，延时的额外消耗主要来源于布线上的延迟，主要来自通过更多多路复用的晶体管。但是由于延时主要来自于单元的读写与走线的延时，经过仿真，延时开销在字线与列线为512的规模上增加仅约15%。 下一篇中将介绍RC-NVM上层系统中的架构设计，主要涉及指令集、缓存协议的设计等。 参考文献 Wang, Peng, et al. &quot;RC-NVM: Enabling symmetric row and column memory accesses for in-memory databases.&quot; 2018 IEEE International Symposium on High Performance Computer Architecture (HPCA). IEEE, 2018.↩ Seshadri, Vivek, et al. &quot;Gather-scatter DRAM: in-DRAM address translation to improve the spatial locality of non-unit strided accesses.&quot; Proceedings of the 48th International Symposium on Microarchitecture. ACM, 2015.↩ Chen, Yen-Hao, and Yi-Yu Liu. &quot;Dual-addressing memory architecture for two-dimensional memory access patterns.&quot; Proceedings of the Conference on Design, Automation and Test in Europe. EDA Consortium, 2013.↩","tags":[]},{"title":"Fisher Information","date":"2019-05-02T14:49:24.000Z","path":"2019/05/02/Fisher-Information/","text":"Fisher Information Fisher Information（费希尔信息）是用以衡量观测数据所蕴含的数据量，具体说来是指观测所得的随机变量\\(X\\)携带的关于未知参数\\(\\theta\\)的信息量，其中\\(X\\)的概率分布依赖于\\(\\theta\\)，通常记作\\({\\mathcal {I}}_{X}(\\theta)\\)。 对于概率分布\\(f(X;\\theta)\\)（满足\\(f(x;\\theta )\\geq0, \\int f(x;\\theta )dx=1,\\quad\\forall\\theta\\in\\Theta\\)，\\(\\Theta\\)为参数集），称对数似然函数关于\\(\\theta\\)的偏导\\(\\frac {\\partial }{\\partial \\theta }\\log f(X;\\theta )\\)为其得分（Score function），对于真实的参数\\(\\theta\\)，则有此得分的期望为0： \\({\\displaystyle {\\begin{aligned}\\operatorname {E} \\left[\\left.{\\frac {\\partial }{\\partial \\theta }}\\log f(X;\\theta )\\right|\\theta \\right]&amp;=\\int {\\frac { {\\frac {\\partial }{\\partial \\theta }}f(x;\\theta )}{f(x;\\theta )}}f(x;\\theta )\\,dx\\\\&amp;={\\frac {\\partial }{\\partial \\theta }}\\int f(x;\\theta )\\,dx\\\\&amp;={\\frac {\\partial }{\\partial \\theta }}1=0.\\end{aligned}}}\\) 并将得分的方差定义为费希尔信息： \\({\\displaystyle {\\mathcal {I}}(\\theta )=\\operatorname {E} \\left[\\left.\\left({\\frac {\\partial }{\\partial \\theta }}\\log f(X;\\theta )\\right)^{2}\\right|\\theta \\right]=\\int \\left({\\frac {\\partial }{\\partial \\theta }}\\log f(x;\\theta )\\right)^{2}f(x;\\theta )\\,dx}\\) 并且在密度函数具有良好性质的情况下，可以用分部积分很容易证明： \\({\\mathcal {I}}(\\theta )=-\\operatorname {E} \\left[\\left.{\\frac {\\partial ^{2}}{\\partial \\theta ^{2}}}\\log f(X;\\theta )\\right|\\theta \\right]\\) 这个表达式以如下方式表达了观测所携带的信息量：若对数似然函数较为平坦，则我们对\\(\\theta\\)的估计较差，反之，若对数似然函数有高而窄的峰，则我们可以得到对\\(\\theta\\)的较好估计，而这个性状由负二阶导数表征。 由于n个样本的对数似然函数为单个似然函数之和，容易证明，n个独立同分布样本的费希尔信息是单个样本的费希尔信息的n倍。 费希尔信息的三种观点： 得分（对数似然函数的偏导）的方差 对数似然函数负二阶偏导的期望 最大似然估计渐近分布的方差的倒数 Cramér-Rao Bound 费希尔信息的重要性在于Cramér-Rao不等式，或Cramér-Rao Bound（克拉美罗界）： 费希尔信息的倒数是参数\\(\\theta\\)的任何无偏估计\\(\\hat\\theta\\)的方差的下界，即\\(\\operatorname {var} ({\\hat {\\theta }})\\geq {\\frac {1}{\\mathcal {I}(\\theta )}}\\) 关于参数\\(\\theta\\)的估计\\(\\hat\\theta\\)的偏定义为估计的误差的期望值，即\\(\\operatorname {Bias} _{\\theta }[\\,{\\hat {\\theta }}\\,]=\\operatorname {E} _{\\theta }[\\,{\\hat {\\theta }}\\,]-\\theta =\\operatorname {E} _{\\theta }[\\,{\\hat {\\theta }}-\\theta \\,]\\)，其中\\(\\operatorname {E} _{\\theta }\\)表示期望是相对密度函数\\(f(X;\\theta)\\)而言的。 若对于所有\\(\\theta\\in\\Theta\\)，偏为0，则称此估计为无偏估计。 例如样本均值是总体均值的无偏估计量，样本方差是总体方差的无偏估计量，而标准差是总体标准差的有偏估计量。 估计无偏并不能保证误差以极大的概率是低的。例如对于正态分布\\({\\mathcal {N}}(\\theta ,1)\\)，设\\(X_1,X_2,\\cdots,X_n\\)是抽自它的独立同分布样本。估计\\(\\theta\\)时，\\(X_1\\)与\\(\\bar {X_n}\\)均为无偏估计，然而显然使用更多数据会得到更好的估计，事实上也可以证明\\(\\bar {X_n}\\)是最小方差无偏估计量，也即达到了克拉美罗界。 达到克拉美罗界的无偏估计量优越于其他所有估计，也即\\({\\displaystyle \\operatorname{E}[(\\hat\\theta_1(X_1,X_2,\\cdots,X_n)-\\theta)^{2}]\\leq\\operatorname{E}[(\\hat\\theta_2(X_1,X_2,\\cdots,X_n)-\\theta)^{2}]}\\)，若\\(\\hat\\theta_1\\)达到了克拉美罗界。 Cramér-Rao不等式的证明： 设\\(V\\)是得分函数，\\(\\hat\\theta\\)是估计量。由Cauchy-Schwartz不等式，可得 \\[\\operatorname{E}_\\theta[(V-\\operatorname{E}_\\theta V)(\\hat\\theta-\\operatorname{E}_\\theta\\hat\\theta)] \\leq \\operatorname{E}_\\theta(V-\\operatorname{E}_\\theta V)^2\\operatorname{E}_\\theta(\\hat\\theta-\\operatorname{E}_\\theta \\hat\\theta)^2\\] 由于\\(\\hat\\theta\\)是无偏估计，所以对于任意\\(\\theta\\)均有\\(\\operatorname{E}_\\theta \\hat\\theta=\\theta\\)，同时得分函数的期望也为零（见上），并且结合费希尔信息的定义（\\({\\mathcal {I}}(\\theta )=\\operatorname {E}[V^2]\\)），代入上式有\\(\\operatorname {E}_\\theta[V\\hat\\theta]\\leq\\mathcal{I}(\\theta)\\operatorname{var}(\\hat\\theta).\\) 而 \\[{\\displaystyle \\begin{aligned} \\operatorname {E}_\\theta[V\\hat\\theta]&amp;=\\int\\frac{\\frac{\\partial}{\\partial\\theta}f(x;\\theta)}{f(x;\\theta)}\\hat\\theta(x)f(x;\\theta)dx \\\\ &amp;= \\int \\frac{\\partial}{\\partial\\theta} f(x;\\theta)\\hat\\theta(x)dx \\\\ &amp;= \\frac{\\partial}{\\partial\\theta}\\int f(x;\\theta)\\hat\\theta(x)dx \\\\ &amp;= \\frac{\\partial}{\\partial\\theta} \\operatorname{E}_\\theta[\\hat\\theta] \\\\ &amp;= \\frac{\\partial}{\\partial\\theta}\\theta = 1\\end{aligned}}\\] （这里能交换积分与微分号是假定密度函数具有良好性质，上同） 代入即得到Cramér-Rao不等式。 \\(\\square\\) 以相同的证明方式可以得到对于任意估计量有\\(\\operatorname {var} \\left({\\hat {\\theta }}\\right)\\geq {\\frac {[1+b&#39;(\\theta )]^{2}}{\\mathcal{I}(\\theta )}}\\)，此处\\(b(\\theta)=\\operatorname{E}_\\theta[\\hat\\theta]-\\theta.\\) 多参数情形的Fisher Information 多参数下有费希尔信息矩阵\\(\\mathcal{I}(\\theta)\\)，其中元素为\\(\\mathcal{I}_{m,k}=\\operatorname {E} \\left[{\\frac {\\partial }{\\partial \\theta _{m}}}\\log f\\left(x;\\theta\\right){\\frac {\\partial }{\\partial \\theta _{k}}}\\log f\\left(x;\\theta\\right)\\right]=-\\operatorname {E} \\left[{\\frac {\\partial ^{2}}{\\partial \\theta _{m}\\partial \\theta _{k}}}\\log f\\left(x;\\theta\\right)\\right]\\) Cramér-Rao不等式变为：\\(\\Sigma\\geq\\mathcal{I}^{-1}(\\theta)\\)，这里矩阵不小于号指差是半正定的，\\(\\Sigma\\)是关于\\(\\theta\\)的一组无偏估计量的协方差矩阵。 与其它散度测度的关系 与熵的关系 以\\(f(x)\\)为密度函数的随机变量\\(X\\)的微分熵（differential entropy）定义为： \\[h(x)=-\\int_{S}f(x)\\log f(x)dx\\] 对\\(\\epsilon&gt;0\\)及任意\\(n\\)，定义\\(f(x)\\)的典型集\\(A_{\\epsilon}^{(n)}\\)如下： \\[\\begin{aligned} A_{\\epsilon}^{(n)}=\\{&amp;(x_1,x_2,\\cdots,x_n)\\in S^n: \\\\ &amp;\\left|-\\frac{1}{n}\\log f(x_1,x_2,\\cdots,x_n)-h(X)\\right|\\leq\\epsilon \\} \\end{aligned}\\] 这里\\(f(x_1,x_2,\\cdots,x_n) = \\prod\\limits_{i=1}^{n}f(x_i)\\) 典型集是所有概率\\(\\geq1-\\epsilon\\)的集合中体积最小的。 熵表征了典型集的体积（典型集体积渐近趋于\\(2^{nh}\\)，其中\\(h\\)为熵），而费希尔信息与典型集的表面积相关。 de Bruijn恒等式 设\\(X\\)为任一随机变量，其密度函数为\\(f(x)\\)且方差有限。令\\(Z\\)是与\\(X\\)独立的正态分布的随机变量，均值为0，方差为1。则： \\[\\frac{\\partial}{\\partial t}h_e(X+\\sqrt{t}Z)=\\frac{1}{2}\\mathcal{I}(X+\\sqrt{t}Z)\\] 此处\\(h_e\\)表明微分熵公式中底数为\\(e\\)，费希尔信息是关于随机变量分布的费希尔信息。特别地，若\\(t\\rightarrow 0\\)时极限存在，则\\(\\frac{\\partial}{\\partial t}h_e(X+\\sqrt{t}Z)\\big|_{t=0}=\\frac{1}{2}\\mathcal{I}(X)\\) 通常\\(t\\)被视作一种扰动。 卷积不等式 \\[\\frac{1}{\\mathcal{I}(X+Y)} \\geq \\frac{1}{\\mathcal{I}(X)} + \\frac{1}{\\mathcal{I}(Y)}\\] 熵幂不等式 设\\(\\mathbf{X}\\)和\\(\\mathbf{Y}\\)为相互独立的\\(n\\)维随机向量，它们的密度函数已知，则： \\[2^{\\frac{2}{n}h(\\mathbf{X}+\\mathbf{Y})}\\geq 2^{\\frac{2}{n}h(\\mathbf{X})}+2^{\\frac{2}{n}h(\\mathbf{Y})}\\] 对于两个独立的随机变量\\(X\\)和\\(Y\\)，\\(h(X+Y)\\geq h(X&#39;+Y&#39;)\\)，这里\\(X&#39;\\)和\\(Y&#39;\\)是相互独立的正态分布的随机变量，且满足\\(h(X&#39;)=h(X)\\)且\\(h(Y&#39;)=h(Y)\\)。 Fisher Information &amp; Natural Gradient 在概率分布函数具备良好性质时，Fisher信息矩阵和KL散度的Hesse矩阵的相反数相等。因而在牛顿迭代法中，使用Fisher信息矩阵代替Hesse矩阵，有时更易求解。 Natural Gradient（自然梯度法） \\[{\\displaystyle \\theta _{m+1}=\\theta _{m}+\\eta_m{\\mathcal {I}}^{-1}(\\theta _{m})V(\\theta _{m})}\\] （\\(V\\)为关于\\(\\theta\\)的得分函数） 自然梯度法考虑了参数的不同维度对目标函数不同的影响，加速了梯度下降法的收敛。 SGD（随机梯度下降）中，假设中心极限定理，随机梯度作为一个随机变量，满足正态分布。那么迭代中，相当于使用全部数据计算的梯度，附加上协方差矩阵，即：（\\(t\\)为mini-batch的规模） \\[{\\displaystyle \\theta _{m+1}=\\theta _{m}+\\eta_m V_0(\\theta _{m})}+\\frac{\\eta_m}{\\sqrt{t}}\\epsilon_m, \\epsilon_m\\sim\\mathcal{N}(0,\\hat{\\Sigma}(\\theta_m))\\] 上式中，协方差与目标函数的曲率在真实参数上相等。而在迭代过程中也近似相等。 这表明这样的SGD中的噪声遵循目标函数的曲率，使得迭代时更容易逃离局部的sharp minima，进入flat minima，从而得到泛化能力更强的解。因而使用自然梯度的随机梯度下降能获得更强的泛化能力，也通常能加快迭代速度。 References Wikipedia contributors, &quot;Fisher information —— Wikipedia, the free encyclopedia,&quot; 2019. [Online; accessed 24-May-2019]. T. M. Cover and J. A. Thomas, Elements of information theory. John Wiley &amp; Sons, 2012. J. Duchi, &quot;Lecture notes for statistics 311/electrical engineering 377,&quot; URL:https://stanford.edu/class/stats311/Lectures/full_notes.pdf . Last visited on, vol. 2, p. 23, 2016.","tags":[]},{"title":"形式语言与自动机","date":"2019-03-24T01:54:17.000Z","path":"2019/03/24/形式语言与自动机/","text":"上下文无关文法 设计上下文无关文法 {anbncmdm|n≥1,m≥1}∩{anbmcmdn|n≥1,m≥1} S-&gt;AB|T T-&gt;aTd|aCd A-&gt;aAb|ab B-&gt;cBd|cd C-&gt;bCc|bc {anbm|n,m≥0∧n≥m} S-&gt;A|B A-&gt;aA|aC B-&gt;Bb|Cb C-&gt;aCb|ε {anbm|n≥0,m≥0,3n≥m≥2n} S-&gt;aSbb|aSbbb|ε {w|w∈{a,b}*,w中a和b的数目不同} S-&gt;A|B A-&gt;AA|Ta B-&gt;BB|Tb T-&gt;aTbT|bTaT|ε 注意此处T生成a与b数目相同的字符串 {w|w∈{a,b}*,且w中a与b的数目相差为2} S-&gt;TaTaT|TbTbT T-&gt;aTbT|bTaT|ε 文法和语言中的二义性 文法无二义性：语法分析树唯一，亦等价于最左推导唯一 下面的文法生成的是具有x和y的操作数、二元运算符+、-和*的前缀表达式： E-&gt;+EE|*EE|-EE|x|y 证明这个文法是无歧义的。（Hopcroft, 5.4.7(b)） 提纲：可证明其最左推导是唯一的，对字符串长度归纳，同时归纳证明生成的字符串w所有非空后缀字符串中操作数个数多于运算符个数。 有限自动机 安利一个用来画自动机的app：http://madebyevan.com/fsm/ 设计DFA 长度至少为2且头两个字符不相同的0,1串构成的集合 0 1 -&gt;q0 q1 q2 q1 q4 q3 q2 q3 q4 *q3 q3 q3 q4 q4 q4 {w∈{a,b}*|w中不包含子串aa} a b -&gt;*q0 q1 q0 *q1 q2 q0 q2 q2 q2 {w∈{a,b}*|w中包含且仅包含奇数个子串ab} a b -&gt;q0 q1 q0 q1 q1 q2 *q2 q3 q2 q3 q3 q0 {w∈{a,b}*|w中a的个数和b的个数之和是奇数} a b -&gt;q0 q1 q1 *q1 q0 q0 {w∈{a,b}*|w含相同个数的a和b,且w的每个前缀中a和b个数之差不超过1} a b -&gt;*q0 q1 q2 q1 q3 q0 q2 q0 q3 q3 q3 q3 {w∈{a,b}*|w包含子串ab，但不包含子串bb} 相应的NFA有： 此NFA遇到子串ab时到达终态，如果是最后一个ab，则停留在终态，反之跳转回q1。 DFA的最小化 构造与该DFA等价的最小化的DFA： 填表算法第一步区分1，3，6与2，4，5 第二步区分2与4，5（输入字符b） 第三步区分1，3与6（输入字符a） 故最终等价类有{1, 3}, {2}, {4, 5}, {6} 最小化的DFA是 正规语言 设计正规语言 {xwxR|x,w∈(a+b)+},其中(a+b)+=(a+b)(a+b)*,xR为x的反向(即反转) a(a+b)(a+b)*a+b(a+b)(a+b)*(a+b) {w|w∈{a,b}*∧∃x,y(x,y∈{a,b}*∧w=xy∧|y|=3∧y=yR)} (a+b)*(aaa+aba+bab+bbb) {w∈{a,b}*|w中既不包含子串aa,也不包含子串bb} (ε+b)(ab)*(ε+a) {anbm|n,m≥0且n+m为偶数} (aa)*(bb)*+(aa)*a(bb)*b {w|w∈{a,b}*,|w|≥1,且w的后20位至少有一个a} (a+b)*a(a+b+ε)19 {w|w∈{a,b}*,|w|≥1,且当w以a结尾时,它的长度为奇数} ((a+b)(a+b))*a+(a+b)*b {w|w∈{a,b}*,|w|≥2,且w的前5位至少有一个子串aa} (a+b+ε)3aa(a+b)* {w|w∈{a,b}*,|w|≥2,且w的第2位至第5位至少有一个a} (a+b)(a+b+ε)3a(a+b)* {w|w∈{0,1}*,w至少含有3个1,且倒数第3位为1} (0+1)*1(0+1)*1(0+1)*100+(0+1)*1(0+1)*1(01+10)+(0+1)*111 有限状态自动机与正规表达式的关系 Thompson构造法 略 Kleene构造法&amp;状态消去法 运用状态消去法，消2，1到4的弧变为b(a+b)，4到自身的弧变为(a+b)2 最终的正则表达式为a*+a*b(a+b)((a+b)2)* 正规语言的性质 语言L由所有满足如下条件的0，1串构成：0的数目二倍于1的数目。试应用Pumping引理证明L不是正规语言。 对于任意n，取w=02n1n，任意满足w=xyz∧|xy|≤n∧y≠ε的x，y，z必有y全由0组成，则xy0z中0比1的两倍少，不在L中，L不是正规语言。 语言L由所有满足如下条件的0, 1串构成：0的数目多于1的数目（ 对0 和1 在串中出现的次序没有限制）。试应用Pumping引理证明L不是正规语言。 选w=0n+11n","tags":[]},{"title":"Hello, world!","date":"2019-03-24T01:53:12.000Z","path":"2019/03/24/Hello-world/","text":"这里会记录一些学习笔记，或者灌水，请多多指教！","tags":[]}]